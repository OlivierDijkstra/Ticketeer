version: "3.9"

x-common-environment-networks: &common-environment-networks
  env_file: .env
  networks:
    - app-network

x-api-service-build: &api-service-build
  build:
    context: .
    dockerfile: ./apps/api/Dockerfile

x-common-logging: &common-logging
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

services:
  dashboard:
    build:
      context: .
      dockerfile: ./apps/dashboard/Dockerfile
    <<: *common-environment-networks
    <<: *common-logging
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "3000:3000"
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f ${DASHBOARD_DOMAIN:-dashboard.test.local} || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    # extra_hosts:
    #   - "${DASHBOARD_DOMAIN:-dashboard.test.local}:host-gateway"

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    <<: *common-environment-networks
    <<: *common-logging
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "3001:3000"
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f ${FRONTEND_DOMAIN:-frontend.test.local} || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    # extra_hosts:
    #   - "${FRONTEND_DOMAIN:-frontend.test.local}:host-gateway"

  api:
    <<: [*api-service-build, *common-environment-networks, *common-logging]
    restart: unless-stopped
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      - db
      - redis
      - typesense
    healthcheck:
      test: ["CMD", "php", "artisan", "octane:status"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "${API_DOMAIN:-api.test.local}:host-gateway"

  horizon:
    <<: [*api-service-build, *common-environment-networks, *common-logging]
    restart: unless-stopped
    environment:
      CONTAINER_MODE: horizon
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "php", "artisan", "horizon:status"]
      interval: 30s
      timeout: 10s
      retries: 3

  scheduler:
    <<: [*api-service-build, *common-environment-networks, *common-logging]
    restart: unless-stopped
    environment:
      CONTAINER_MODE: scheduler
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "php", "artisan", "schedule:list"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    <<: *common-environment-networks
    <<: *common-logging
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.4
    <<: *common-environment-networks
    <<: *common-logging
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3

  typesense:
    image: typesense/typesense:26.0
    <<: *common-environment-networks
    <<: *common-logging
    restart: unless-stopped
    command: --data-dir /data --api-key=${TYPESENSE_API_KEY} --listen-port ${TYPESENSE_PORT} --enable-cors
    volumes:
      - typesense_data:/data
    ports:
      - "${TYPESENSE_PORT:-8108}:8108"
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://127.0.0.1:8108/health || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

volumes:
  mysql_data:
  typesense_data:
  tmpfiles:
    driver: local

networks:
  app-network:
    driver: bridge